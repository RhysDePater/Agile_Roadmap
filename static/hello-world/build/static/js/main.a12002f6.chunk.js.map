{"version":3,"sources":["services/contextLib.js","components/filter/elements/FilterDropdown.jsx","components/filter/FilterComponent.jsx","services/helper.js","components/table/elements/InitiativeComponent.jsx","components/table/elements/FixedVersionTitlecomponent.jsx","components/table/elements/FixedVersionCell.jsx","components/table/Table.jsx","App.js","index.js"],"names":["AppContext","createContext","useAppContext","useContext","FilterDropdown","arrayToFilter","setArrayToFilter","filter","useState","dropdownOpen","setDropdownOpen","console","log","ButtonDropdown","isOpen","toggle","prevState","className","DropdownToggle","caret","DropdownMenu","map","data","i","DropdownItem","FormGroup","check","Label","name","Input","type","defaultChecked","isSelected","onChange","e","target","checked","newArr","FilterComponent","fixedVersions","setFixedVersions","initiatives","setInitiatives","parseByIssueType","issuesData","issueTypeFilter","temp_array","issue","issueType","push","progressForEpics","epic","key","a","done","progress","backlog","epicInfo","j","statusType","fields","status","eProgress","length","Done","Progress","Backlog","Initiative","props","Col","xs","title","FixedVersionTitle","start","end","FixedVersionCell","epics","setEpics","fixVersions","id","parents","parent","h","initKey","ReactTableComponent","Row","fixVer","startDate","releaseDate","initiative","App","epicsProgress","setEpicsProgress","issues","setIssues","useEffect","view","getContext","context","extension","project","invoke","projectKey","then","getAllInfo","epicProgress","epicKey","getProgressForEpics","Provider","value","version","Object","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a12002f6.chunk.js","sourcesContent":["import { useContext, createContext } from \"react\";\r\n\r\nexport const AppContext = createContext(null);\r\n//create a global context for all pages\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    ButtonDropdown,\r\n    DropdownToggle,\r\n    Dropdown,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    FormText,\r\n} from \"reactstrap\";\r\n\r\nexport default function FilterDropdown(arrayToFilter, setArrayToFilter, filter) {\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const toggle = () => setDropdownOpen(prevState => !prevState);\r\n    console.log(arrayToFilter);\r\n\r\n    return (\r\n        <div>\r\n\r\n            <ButtonDropdown isOpen={dropdownOpen} toggle={toggle} className=\"buttonDrop\">\r\n                <DropdownToggle caret className=\"fgh\">\r\n                    Filter {filter}\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                    {arrayToFilter.map((data, i) => (\r\n                        <DropdownItem toggle={false}><FormGroup check>\r\n                            <Label check>\r\n                                {arrayToFilter[i].name /**label names */}\r\n                                <Input type=\"checkbox\"\r\n                                    defaultChecked={data.isSelected /**checkbox is ticked value*/}\r\n                                    onChange={(e) => {\r\n                                        //store current data\r\n                                        //if an event update\r\n                                        if (e.target.checked == true) {\r\n                                            let newArr = [...arrayToFilter];\r\n                                            console.log(\"BOOLEAN set to: \" + e.target.checked);\r\n                                            //store updated value in temp array\r\n                                            newArr[i].isSelected = e.target.checked;\r\n                                            //update usestate\r\n                                            setArrayToFilter(newArr)\r\n                                            console.log(arrayToFilter[i].isSelected);\r\n                                        }\r\n                                        // check if box is not ticked\r\n                                        if (e.target.checked == false) {\r\n                                            let newArr = [...arrayToFilter];\r\n                                            console.log(\"BOOLEAN set to: \" + e.target.checked);\r\n                                            //store updated value in temp array\r\n                                            newArr[i].isSelected = e.target.checked;\r\n                                            //update usestate\r\n                                            setArrayToFilter(newArr)\r\n                                            console.log(arrayToFilter[i].isSelected);\r\n\r\n                                        }\r\n                                    }} />{\" \"}\r\n                            </Label>{\" \"}\r\n                        </FormGroup></DropdownItem>\r\n                    ))}\r\n                </DropdownMenu>\r\n            </ButtonDropdown>\r\n\r\n        </div>\r\n    )\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    ButtonDropdown,\r\n    DropdownToggle,\r\n    Dropdown,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    FormText,\r\n} from \"reactstrap\";\r\n\r\nimport { useAppContext } from \"../../services/contextLib\";\r\nimport FilterDropdown from \"./elements/FilterDropdown\";\r\n\r\n\r\nexport default function FilterComponent() {\r\n\r\n    const { fixedVersions, setFixedVersions } = useAppContext();\r\n    const { initiatives, setInitiatives } = useAppContext();\r\n\r\n    return (\r\n        <div className=\"dropItem\">\r\n\r\n\r\n            {FilterDropdown(fixedVersions, setFixedVersions, \"Realises\")}\r\n\r\n\r\n            {FilterDropdown(initiatives, setInitiatives, \"Initiative\")}\r\n\r\n        </div>\r\n    )\r\n}","import { view, invoke } from \"@forge/bridge\";\r\n// export function parseIssues(issuesData){\r\n//     var temp_array = [];\r\n//     for(let i = 0; i < issuesData[0].length; i++){\r\n//         var element = issuesData[0][i];\r\n//         temp_array.push(element);\r\n//     }\r\n//     return temp_array;\r\n// }\r\n\r\nexport function parseByIssueType(issuesData, issueTypeFilter) {\r\n  var temp_array = [];\r\n  issuesData.map((issue, i) => {\r\n    if (issue.issueType == issueTypeFilter) {\r\n      temp_array.push(issue);\r\n    }\r\n  });\r\n  console.log(temp_array);\r\n  return temp_array;\r\n}\r\n\r\nexport async function progressForEpics(epic, key) {\r\n  let done = 0;\r\n  let progress = 0;\r\n  let backlog = 0;\r\n  epic.map((epicInfo, j) => {\r\n    let statusType = epicInfo.fields.status.name;\r\n    if (statusType == \"Done\") {\r\n      done += 1;\r\n    } else if (\r\n      statusType == \"Backlog\" ||\r\n      statusType == \"Selected For Development\"\r\n    ) {\r\n      backlog += 1;\r\n    } else {\r\n      progress += 1;\r\n    }\r\n  });\r\n\r\n  var eProgress = {\r\n    key: key,\r\n    length: epic.length,\r\n    Done: done,\r\n    Progress: progress,\r\n    Backlog: backlog,\r\n  };\r\n  return eProgress;\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} contextKey project context key\r\n * @param {*} apiCall1 fetch issues api call\r\n * @param {*} apiCall2 fetch children api call\r\n * @returns returns combined 2 api calls values into a single array of arrays\r\n */\r\nexport async function fetchAllIssueInfo(epicKeys, issues) {\r\n  for (let i = 0; i < issues.length; i++) {\r\n    if (issues[i][2] == \"Epic\") {\r\n      let issuesKeys = await apiCall2(issues[i][0]);\r\n      issues[i].push(issuesKeys);\r\n    }\r\n  }\r\n  return [issues];\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTable } from \"react-table\";\r\n\r\nimport {\r\n    Col\r\n} from \"reactstrap\";\r\n\r\n\r\nexport default function Initiative(props) {\r\n    return (\r\n        <Col xs=\"auto\">\r\n            <div className=\"initiativeBox\">\r\n                <div className=\"intiative\">\r\n                    {props.title}\r\n                </div>\r\n            </div>\r\n\r\n        </Col>\r\n\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useTable } from \"react-table\";\r\n\r\nimport {\r\n    Col\r\n} from \"reactstrap\";\r\n\r\n\r\nexport default function FixedVersionTitle(props) {\r\n    return (\r\n        <Col xs=\"auto\">\r\n            <div className=\"fixSize\">\r\n                <p className=\"dateonfix\">\r\n                    {props.title} -- {props.start} -{\" \"}\r\n                    {props.end}\r\n                </p>\r\n            </div>\r\n\r\n        </Col>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useTable } from \"react-table\";\r\n\r\nimport {\r\n    Col\r\n} from \"reactstrap\";\r\nimport { useAppContext } from \"../../../services/contextLib\";\r\n\r\n\r\nexport default function FixedVersionCell(props) {\r\n    const { epics, setEpics } = useAppContext();\r\n\r\n    return (<div className=\"fixedVersion\">\r\n        <p className=\"fadedTitleCell\">{props.title}</p>\r\n        {epics.map((epic, j) => (\r\n            <div>\r\n                {(() => {\r\n                    if (epic.fixVersions == props.id) {\r\n                        return (\r\n\r\n                            <div>\r\n                                {epic.parents.map((parent, h) => (\r\n                                    <div>\r\n                                        {(() => {\r\n                                            if (parent == props.initKey) {\r\n                                                return (\r\n\r\n                                                    <div>\r\n                                                        <div className=\"epic\">\r\n\r\n                                                            <div className=\"epicName\">\r\n                                                                <p>\r\n                                                                    {epic.name}\r\n                                                                </p>\r\n                                                            </div>\r\n                                                            <p className=\"epicNum\">{epic.key}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                );\r\n                                            }\r\n                                        })()}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        );\r\n                    }\r\n                })()}\r\n            </div>\r\n        ))}\r\n\r\n    </div>)\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useTable } from \"react-table\";\r\n\r\nimport {\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  ButtonDropdown,\r\n  DropdownToggle,\r\n  Dropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n} from \"reactstrap\";\r\n\r\nimport { useAppContext } from \"../../services/contextLib\";\r\nimport Initiative from \"./elements/InitiativeComponent\";\r\nimport FixedVersionTitle from \"./elements/FixedVersionTitlecomponent\";\r\nimport FixedVersionCell from \"./elements/FixedVersionCell\";\r\n\r\n\r\n\r\n\r\n\r\nexport default function ReactTableComponent() {\r\n\r\n  const { fixedVersions, setFixedVersions } = useAppContext();\r\n  const { initiatives, setInitiatives } = useAppContext();\r\n  const { epics, setEpics } = useAppContext();\r\n\r\n\r\n\r\n  return (<div className=\"tablecont\">\r\n\r\n    {/* Fixed versions*/}\r\n    <Row>\r\n      <div className=\"ui-cont\">\r\n        <Col xs=\"auto\">\r\n          <div className=\"InitiativeSize\"></div>\r\n        </Col>\r\n        <div className=\"ui-cont\">\r\n          {fixedVersions.map((fixVer, i) => (\r\n\r\n            <div>{(() => {\r\n              if (fixVer.isSelected == true) {\r\n                return (\r\n                  <FixedVersionTitle title={fixVer.name} start={fixVer.startDate} end={fixVer.releaseDate} />\r\n                );\r\n              }\r\n            })()}\r\n            </div>\r\n\r\n\r\n          ))}\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </Row>\r\n\r\n    {initiatives.map((initiative, i) => (\r\n\r\n      <div>{(() => {\r\n        if (initiative.isSelected == true) {\r\n          return (\r\n            <Row className=\"initRow\">\r\n              <div className=\"ui-cont\">\r\n                <Initiative title={initiative.name} />\r\n                {fixedVersions.map((fixVer, j) => (\r\n                  <Col xs=\"auto\">\r\n                    {(() => {\r\n                      if (fixVer.isSelected == true) {\r\n                        return (\r\n                          <FixedVersionCell id={fixVer.id} title={fixVer.name} start={fixVer.startDate} end={fixVer.releaseDate} initKey={initiative.key} />\r\n                        );\r\n                      }\r\n                    })()}\r\n\r\n                  </Col>\r\n                ))}\r\n              </div>\r\n\r\n            </Row>\r\n          );\r\n        }\r\n      })()}\r\n      </div>\r\n    ))}\r\n  </div>)\r\n}","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Container,\n  Row,\n  Col,\n  ButtonDropdown,\n  DropdownToggle,\n  Dropdown,\n  DropdownMenu,\n  DropdownItem,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n} from \"reactstrap\";\n//\nimport { AppContext } from \"./services/contextLib\";\n//components\n//\nimport { view, invoke } from \"@forge/bridge\";\nimport \"./App.css\";\n// import FilterDropDown from \"./components/filter/FilterDropdown\"\nimport FilterComponent from \"./components/filter/FilterComponent\";\nimport { parseByIssueType, progressForEpics } from \"./services/helper\";\n//import TableComponent from \"./components/table/TableComponent\";\n//import FixedVersionCol from \"./components/table/FixedVersionCol\";\nimport ReactTableComponent from \"./components/table/Table\";\nexport default function App() {\n  //usestates\n  const [fixedVersions, setFixedVersions] = useState([]);\n  const [initiatives, setInitiatives] = useState([]);\n  const [epics, setEpics] = useState([]);\n  const [epicsProgress, setEpicsProgress] = useState([]);\n  const [issues, setIssues] = useState([]);\n  const [modal, setModal] = useState(false);\n  const toggleM = () => setModal(!modal);\n  let test = [{ key: \"CRKS-15\" }, { key: \"CKRS-14\" }];\n\n  useEffect(() => {\n    async function getAllInfo() {\n      try {\n        const context = await view.getContext();\n        const key = context.extension.project.key;\n        await invoke(\"getFixedVersions\", { projectKey: key }).then((data) =>\n          setFixedVersions(data)\n        );\n        await invoke(\"getIssues\", { projectKey: key }).then((data) => {\n          setEpics(parseByIssueType(data, \"Epic\"));\n          setInitiatives(parseByIssueType(data, \"Initiative\"));\n          setIssues(data);\n        });\n      } catch (e) {\n        console.log(\"API RENDER ERROR: \" + e);\n      }\n    }\n    getAllInfo();\n  }, []);\n\n  useEffect(() => {\n    async function getProgressForEpics() {\n      try {\n        if (epics.length > 0) {\n          let epicProgress = [];\n          epics.map((epic, i) => {\n            invoke(\"getStoriesForEpics\", { epicKey: epic.key }).then((data) => {\n              progressForEpics(data, epic.key).then((data) => {\n                epicProgress.push(data);\n                if (epics.length == epicProgress.length) {\n                  setEpicsProgress(epicProgress);\n                }\n              });\n            });\n          });\n        }\n      } catch (e) {\n        console.log(\"API RENDER ERROR: \" + e);\n      }\n    }\n    getProgressForEpics();\n  }, [epics]);\n\n  if (\n    fixedVersions.length > 0 &&\n    issues.length > 0 &&\n    epicsProgress.length > 0\n  ) {\n    return (\n      <div>\n        <AppContext.Provider\n          value={{\n            fixedVersions,\n            setFixedVersions,\n            issues,\n            setIssues,\n            initiatives,\n            setInitiatives,\n            epics,\n            setEpics,\n          }}\n        >\n          <FilterComponent />\n\n          <ReactTableComponent />\n        </AppContext.Provider>\n\n        <div>\n          {fixedVersions.map((version, i) => (\n            <p>\n              {Object.keys(version).map((key, j) => (\n                <span>\n                  {key}: {version[key]}\n                </span>\n              ))}\n            </p>\n          ))}\n        </div>\n        <br></br>\n        <div>\n          {epics.map((epic, i) => (\n            <p>\n              {Object.keys(epic).map((key, j) => (\n                <span>\n                  {key}: {epic[key]}\n                </span>\n              ))}\n            </p>\n          ))}\n        </div>\n        <br></br>\n        <div>\n          {epicsProgress.map((epic, i) => (\n            <p>\n              {Object.keys(epic).map((key, j) => (\n                <span>\n                  {key}: {epic[key]}\n                </span>\n              ))}\n            </p>\n          ))}\n        </div>\n        <br></br>\n        <div>\n          {initiatives.map((initiative, i) => (\n            <p>\n              {Object.keys(initiative).map((key, j) => (\n                <span>\n                  {key}: {initiative[key]}\n                </span>\n              ))}\n            </p>\n          ))}\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"lds-ring\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@atlaskit/css-reset';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}