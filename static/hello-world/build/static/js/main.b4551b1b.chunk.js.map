{"version":3,"sources":["App.js","index.js"],"names":["Column","props","Col","class","title","App","useState","ColumnName","SetColumnName","id","columns","setColumns","Container","fluid","Row","xs","Form","inline","onSubmit","event","preventDefault","updateUsers","length","handleNewColumn","FormGroup","className","InputGroup","Input","type","value","onChange","target","InputGroupAddon","addonType","Button","color","map","column","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAgBA,SAASA,EAAOC,GACZ,OACI,cAACC,EAAA,EAAD,CAAKC,MAAM,MAAX,SACI,sBAAKA,MAAM,YAAX,cAAyBF,EAAMG,WAgF5BC,MA3Ef,WAEI,MAAoCC,qBAApC,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BF,mBAAS,CACnC,CAAEG,GAAI,EAAGL,MAAO,YAChB,CAAEK,GAAI,EAAGL,MAAO,cAFpB,mBAAOM,EAAP,KAAgBC,EAAhB,KAuBA,OACI,8BAEI,eAACC,EAAA,EAAD,CAAWC,OAAO,EAAlB,UACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACC,EAAA,EAAD,CACIC,QAAM,EACNC,SAAU,WACNC,MAAMC,iBA1B9B,WAEI,IAAMC,EAAW,sBAEVX,GAFU,CAIb,CAEID,GAAIC,EAAQY,OAAS,EAErBlB,MAAOG,KAIfI,EAAWU,GAaSE,IAJR,SAOI,cAACC,EAAA,EAAD,CAAWC,UAAU,uBAArB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,KAAK,OACLnB,GAAG,iBACHoB,MAAOtB,EACPuB,SAAU,SAACX,GACP,IAAQU,EAAUV,EAAMY,OAAhBF,MACRrB,EAAcqB,MAGtB,cAACG,EAAA,EAAD,CAAiBC,UAAU,SAA3B,SACI,cAACC,EAAA,EAAD,CAAQC,MAAM,YAAYP,KAAK,SAA/B,mCAQpB,uBAEA,eAACd,EAAA,EAAD,CAAKC,GAAG,IAAR,UACA,cAACb,EAAA,EAAD,CAAKC,MAAM,MAAX,SACI,sBAAKA,MAAM,YAAX,qBAA+B,qBAAKA,MAAM,OAAX,2BAE9BO,EAAQ0B,KAAI,SAACC,GAAD,OACT,cAACrC,EAAD,CAAQI,MAAOiC,EAAOjC,oB,YClF9CkC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.b4551b1b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n    Container,\n    Row,\n    Col,\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    InputGroup,\n    InputGroupAddon\n} from \"reactstrap\";\n\nimport \"./App.css\"\n\nfunction Column(props) {\n    return (\n        <Col class=\"col\">\n            <div class=\"columnBox\"> {props.title}</div>\n        </Col>\n    );\n}\n\nfunction App() {\n\n    const [ColumnName, SetColumnName] = useState();\n    const [columns, setColumns] = useState([\n        { id: 1, title: \"Column 1\" },\n        { id: 1, title: \"Column 2\" }\n    ]);\n\n    function handleNewColumn() {\n        // it's important to not mutate state directly, so here we are creating a copy of the current state using the spread syntax\n        const updateUsers = [\n            // copy the current users state\n            ...columns,\n            // now you can add a new object to add to the array\n            {\n                // using the length of the array for a unique id\n                id: columns.length + 1,\n                // adding a new user name\n                title: ColumnName\n            }\n        ];\n        // update the state to the updatedUsers\n        setColumns(updateUsers);\n    }\n\n\n    return (\n        <div>\n            \n            <Container fluid={true}>\n                <Row xs=\"5\">\n                    <Form\n                        inline\n                        onSubmit={() => {\n                            event.preventDefault();\n                            handleNewColumn();\n                        }}\n                    >\n                        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                            <InputGroup>\n                                <Input\n                                    type=\"text\"\n                                    id=\"newColumnInput\"\n                                    value={ColumnName}\n                                    onChange={(event) => {\n                                        const { value } = event.target;\n                                        SetColumnName(value);\n                                    }}\n                                />\n                                <InputGroupAddon addonType=\"append\">\n                                    <Button color=\"secondary\" type=\"submit\">\n                                        Add Column\n                                    </Button>\n                                </InputGroupAddon>\n                            </InputGroup>\n                        </FormGroup>\n                    </Form>\n                </Row>\n                <br />\n\n                <Row xs=\"6\">\n                <Col class=\"col\">\n                    <div class=\"columnBox\"> Column <div class=\"card\"> card 1 </div></div>\n                    </Col>\n                    {columns.map((column) => (\n                        <Column title={column.title} />\n                    ))}\n                    \n                    \n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport '@atlaskit/css-reset';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}