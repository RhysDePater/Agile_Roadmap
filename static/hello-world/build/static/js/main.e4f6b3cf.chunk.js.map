{"version":3,"sources":["App.js","index.js"],"names":["App","useState","fixedVerions","setfixedVerions","fixedVerions1","setfixedVerions1","issues","setIssues","contextKey","setContextKey","contextId","setContextId","modal","setModal","toggleM","dropdownOpen1","setDropdownOpen","toggle1","prevState","useEffect","a","view","getContext","value","extension","project","key","getKey","id","getId","invoke","projectKey","then","getFixedVersions","getFixedVersions1","getIssues","Dropdown","isOpen","toggle","DropdownToggle","tag","data-toggle","aria-expanded","className","DropdownMenu","map","fixVer","i","FormGroup","check","Label","Input","type","defaultChecked","onChange","e","target","checked","console","log","Row","Col","xs","issu","fixv","j","issu1","k","epi","l","onClick","str","x","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4f6b3cf.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n    Button,\n    Container,\n    Row,\n    Col,\n    ButtonDropdown,\n    DropdownToggle,\n    Dropdown,\n    DropdownMenu,\n    DropdownItem,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText,\n} from \"reactstrap\";\n\nimport dropDown from \"./components/dropdown\";\nimport { view, invoke } from \"@forge/bridge\";\nimport \"./App.css\";\n\nfunction App() {\n    const [fixedVerions, setfixedVerions] = useState(null);\n    const [fixedVerions1, setfixedVerions1] = useState(null);\n    const [issues, setIssues] = useState(null);\n    const [contextKey, setContextKey] = useState(null);\n    const [contextId, setContextId] = useState(null);\n    const [dropdownOpen, setOpen] = useState(false);\n    const [found, setfound] = useState(false);\n\n    const [modal, setModal] = useState(false);\n\n    const toggleM = () => setModal(!modal);\n\n    const toggle = () => setOpen(!dropdownOpen);\n\n    const [dropdownOpen1, setDropdownOpen] = useState(false);\n\n    const toggle1 = () => setDropdownOpen(prevState => !prevState);\n\n\n    //export later get key\n    useEffect(() => {\n        async function getKey() {\n            const value = await view.getContext();\n            setContextKey(value.extension.project.key);\n        }\n        getKey();\n    }, []);\n\n    //export later get id\n    useEffect(() => {\n        async function getId() {\n            const value = await view.getContext();\n            setContextId(value.extension.project.id);\n        }\n        getId();\n    }, []);\n\n    useEffect(() => {\n        async function getFixedVersions() {\n            await invoke(\"getFixedVersions\", { projectKey: \"CKRS\" }).then(\n                setfixedVerions\n            );\n        }\n        async function getFixedVersions1() {\n            await invoke(\"getFixedVersions\", { projectKey: \"CKRS\" }).then(\n                setfixedVerions1\n            );\n        }\n        getFixedVersions();\n        getFixedVersions1();\n    }, []);\n\n    useEffect(() => {\n        async function getIssues() {\n            await invoke(\"getIssues\", { projectKey: \"CKRS\" }).then(setIssues);\n        }\n        getIssues();\n    }, []);\n\n     //two arrays approach wont work. need to append value to each array and run an isChecked to render information\n     //ADD ISCHECKED VALUE TO FIXED VERSIOSN ARRAY -- TODO\n\n    return (\n        <div>\n            <div>\n                {(() => {\n                    if (issues && fixedVerions) {\n                        return (\n                            <div>\n                                {/* Filter dropdown*/}\n                                {\n                                    (() => {\n                                        if (fixedVerions1) {\n                                            return (\n                                                <div>\n                                                    <Dropdown isOpen={dropdownOpen1} toggle={toggle1} >\n                                                        <DropdownToggle\n                                                            tag=\"span\"\n                                                            data-toggle=\"dropdown\"\n                                                            aria-expanded={dropdownOpen1}\n\n                                                        >\n                                                            <div className=\"dropdwnbtn\"><b>Filter â–¶</b></div>\n                                                        </DropdownToggle>\n                                                        <DropdownMenu>\n                                                            {fixedVerions1.map((fixVer, i) => (\n                                                                <div className=\"dropitem\"><FormGroup check>\n                                                                    <Label check>\n                                                                        {fixedVerions1[i][0]} - {fixedVerions1[i][1]}\n                                                                        <Input type=\"checkbox\" defaultChecked=\"true\" onChange={(e) => {\n                                                                            //check if box is ticked\n                                                                            if(e.target.checked == true){\n                                                                                console.log(\"istrue\")    \n                                                                                //isChecked vlaue to true in array -- TO DO                                                                              \n                                                                                                                              \n                                                                            }\n                                                                            //check if box is not ticked\n                                                                            if(e.target.checked == false){\n                                                                                //isChecked value to false in array -- TO DO\n                                                                            \n                                                                            }                                                                            \n                                                                            console.log(i +\": \"+ e.target.checked)\n                                                                        }\n\n                                                                        } />{\" \"}\n\n\n                                                                    </Label>{\" \"}\n                                                                </FormGroup></div>\n\n\n                                                            ))}\n\n                                                        </DropdownMenu>\n\n                                                    </Dropdown>\n\n\n\n                                                </div>\n                                            );\n                                        } else {\n                                            return <div>Loading..</div>;\n                                        }\n                                    })()\n                                }\n\n                                {/* Fixed versions*/}\n                                <Row>\n                                    <div className=\"ui-cont\">\n                                        <Col xs=\"auto\">\n                                            <div className=\"InitiativeSize\"></div>\n                                        </Col>\n\n                                        {(() => {\n                                            if (fixedVerions) {\n                                                return (\n                                                    <div className=\"ui-cont\">\n                                                        {fixedVerions.map((fixVer, i) => (\n                                                            <Col xs=\"auto\">\n                                                                <div className=\"fixSize\">\n                                                                    <p className=\"dateonfix\">\n                                                                        {fixedVerions[i][1]} -- {fixedVerions[i][2]} -{\" \"}\n                                                                        {fixedVerions[i][3]}\n                                                                    </p>\n                                                                </div>\n                                                            </Col>\n                                                        ))}\n                                                    </div>\n                                                );\n                                            } else {\n                                                return <div>Loading..</div>;\n                                            }\n                                        })()}\n                                    </div>\n\n                                    {/* Initiatives with matching epics in fixed versions*/}\n                                </Row>\n                                {issues[0].map((issu, i) => (\n                                    // Getting initiatives and displaying them\n                                    <div>\n                                        {(() => {\n                                            if (issues[0][i][2] == \"Initiative\") {\n                                                return (\n                                                    // Getting fix versions\n                                                    <Row>\n                                                        <div className=\"ui-cont\">\n                                                            {\" \"}\n                                                            <Col xs=\"auto\">\n                                                                <div className=\"initiativeBox\">\n                                                                    <div className=\"intiative\">\n                                                                        {issues[0][i][1]}\n                                                                    </div>\n                                                                </div>\n                                                            </Col>\n                                                            {fixedVerions.map((fixv, j) => (\n                                                                <Col xs=\"auto\">\n                                                                    <div className=\"fixedVersion\">\n                                                                        {issues[0].map((issu1, k) => (\n                                                                            <div>\n                                                                                {(() => {\n                                                                                    if (issues[0][k][3] == fixedVerions[j][0]) {\n                                                                                        return (\n                                                                                            // Getting Epics\n                                                                                            <div>\n                                                                                                {issues[0][k][4].map((epi, l) => (\n                                                                                                    // If Epics match Initiative and fix version then display\n                                                                                                    <div>\n                                                                                                        {(() => {\n                                                                                                            if (issues[0][k][4][l] == issues[0][i][0]) {\n                                                                                                                return (\n                                                                                                                    // display stories\n                                                                                                                    <div className=\"epic\" onClick={toggleM}>\n\n                                                                                                                        <div className=\"epicName\">\n                                                                                                                            <p>\n                                                                                                                                {issues[0][k][1]}\n                                                                                                                            </p>\n                                                                                                                        </div>\n\n                                                                                                                        {issues[0][k][5].map((str, x) => (\n                                                                                                                            <div className=\"Storybox\">\n                                                                                                                                Story: {issues[0][k][5][x]}\n                                                                                                                            </div>\n                                                                                                                        )\n                                                                                                                        )}\n                                                                                                                        <p className=\"epicNum\">{issues[0][k][0]}</p>\n                                                                                                                    </div>\n                                                                                                                );\n                                                                                                            }\n                                                                                                        })()}\n                                                                                                    </div>\n                                                                                                )\n                                                                                                )}\n                                                                                            </div>\n                                                                                        );\n                                                                                    }\n                                                                                })()}\n                                                                            </div>\n                                                                        ))}\n                                                                    </div>\n                                                                </Col>\n                                                            ))}\n                                                        </div>\n                                                    </Row>\n                                                );\n                                            }\n                                        })()}\n                                    </div>\n                                ))}\n                            </div>\n                        );\n                    } else {\n                        return <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>;\n                    }\n                })()}\n            </div>\n\n            {/*\n            <Modal isOpen={modal} toggle={toggleM}>\n                <ModalHeader toggle={toggleM}>Modal title</ModalHeader>\n                <ModalBody>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={toggleM}>Do Something</Button>{' '}\n                </ModalFooter>\n            </Modal>\n            */}\n\n            <br></br>\n            <br></br>\n            <br></br>\n\n\n            {issues ? issues[0].map((value, i) => (\n                <div>\n                    <div>{issues[0][i]}</div>\n                </div>\n            ))\n                : \"Loading..\"}\n            <div className=\"Api\">\n                <div>\n                    <p>Fixed Versions:</p>\n                    {fixedVerions ? fixedVerions : \"Loading...\"}\n                </div>\n                <br></br>\n                <div>\n                    <p>contextKey:</p>\n                    {contextKey ? contextKey : \"Loading...\"}\n                </div>\n                <br></br>\n                <div>\n                    <p>contextId:</p>\n                    {contextId ? contextId : \"Loading...\"}\n                </div>\n            </div>\n        </div >\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@atlaskit/css-reset';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}