{"version":3,"sources":["App.js","index.js"],"names":["Column","props","Col","class","title","App","useState","id","columns","setColumns","Container","fluid","Row","xs","Form","inline","onSubmit","event","preventDefault","updateUsers","length","ColumnName","handleNewColumn","FormGroup","className","InputGroup","Input","type","value","onChange","target","SetColumnName","InputGroupAddon","addonType","Button","color","map","column","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAoBA,SAASA,EAAOC,GACZ,OACI,cAACC,EAAA,EAAD,CAAKC,MAAM,MAAX,SACI,sBAAKA,MAAM,YAAX,cAAyBF,EAAMG,WAiF5BC,MA5Ef,WAMI,MAA8BC,mBAAS,CACnC,CAAEC,GAAI,EAAGH,MAAO,YAChB,CAAEG,GAAI,EAAGH,MAAO,cAFpB,mBAAOI,EAAP,KAAgBC,EAAhB,KAsBA,OACI,8BACI,eAACC,EAAA,EAAD,CAAWC,OAAO,EAAlB,UACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACC,EAAA,EAAD,CACIC,QAAM,EACNC,SAAU,WACNC,MAAMC,iBAxB9B,WAEI,IAAMC,EAAW,sBAEVX,GAFU,CAIb,CAEID,GAAIC,EAAQY,OAAS,EAErBhB,MAAOiB,cAIfZ,EAAWU,GAWSG,IAJR,SAOI,cAACC,EAAA,EAAD,CAAWC,UAAU,uBAArB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,KAAK,OACLpB,GAAG,iBACHqB,MAAOP,WACPQ,SAAU,SAACZ,GACP,IAAQW,EAAUX,EAAMa,OAAhBF,MACRG,cAAcH,MAGtB,cAACI,EAAA,EAAD,CAAiBC,UAAU,SAA3B,SACI,cAACC,EAAA,EAAD,CAAQC,MAAM,YAAYR,KAAK,SAA/B,mCAQpB,uBAEA,eAACf,EAAA,EAAD,CAAKC,GAAG,IAAR,UACA,cAACX,EAAA,EAAD,CAAKC,MAAM,MAAX,SACI,sBAAKA,MAAM,YAAX,qBAA+B,qBAAKA,MAAM,OAAX,2BAE9BK,EAAQ4B,KAAI,SAACC,GAAD,OACT,cAACrC,EAAD,CAAQI,MAAOiC,EAAOjC,oB,YCvF9CkC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.933b6015.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    InputGroup,\r\n    InputGroupAddon\r\n} from \"reactstrap\";\r\n\r\nimport \"./App.css\"\r\n//import API TO MOVE TO APPROPRIATE LOCATION LATER\r\n// const api = require('./controller/api/fetch');\r\n// const helper = require('./controller/helper/contextLib');\r\n//\r\n\r\nfunction Column(props) {\r\n    return (\r\n        <Col class=\"col\">\r\n            <div class=\"columnBox\"> {props.title}</div>\r\n        </Col>\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    //API CONSTS TO MOVE TO APPROPRIATE LOCATION LATER\r\n    // const contextKey = helper.getAppContextKey();\r\n    // const contextId = helper.getAppContextId();\r\n    // const [issues] = useState(async () => await api.fetchIssueKeys(contextKey));\r\n    // const [ColumnName, SetColumnName] = useState();\r\n    const [columns, setColumns] = useState([\r\n        { id: 1, title: \"Column 1\" },\r\n        { id: 1, title: \"Column 2\" }\r\n    ]);\r\n\r\n    function handleNewColumn() {\r\n        // it's important to not mutate state directly, so here we are creating a copy of the current state using the spread syntax\r\n        const updateUsers = [\r\n            // copy the current users state\r\n            ...columns,\r\n            // now you can add a new object to add to the array\r\n            {\r\n                // using the length of the array for a unique id\r\n                id: columns.length + 1,\r\n                // adding a new user name\r\n                title: ColumnName\r\n            }\r\n        ];\r\n        // update the state to the updatedUsers\r\n        setColumns(updateUsers);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container fluid={true}>\r\n                <Row xs=\"5\">\r\n                    <Form\r\n                        inline\r\n                        onSubmit={() => {\r\n                            event.preventDefault();\r\n                            handleNewColumn();\r\n                        }}\r\n                    >\r\n                        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n                            <InputGroup>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    id=\"newColumnInput\"\r\n                                    value={ColumnName}\r\n                                    onChange={(event) => {\r\n                                        const { value } = event.target;\r\n                                        SetColumnName(value);\r\n                                    }}\r\n                                />\r\n                                <InputGroupAddon addonType=\"append\">\r\n                                    <Button color=\"secondary\" type=\"submit\">\r\n                                        Add Column\r\n                                    </Button>\r\n                                </InputGroupAddon>\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </Row>\r\n                <br />\r\n\r\n                <Row xs=\"6\">\r\n                <Col class=\"col\">\r\n                    <div class=\"columnBox\"> Column <div class=\"card\"> card 1 </div></div>\r\n                    </Col>\r\n                    {columns.map((column) => (\r\n                        <Column title={column.title} />\r\n                    ))}\r\n                    \r\n                    \r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport '@atlaskit/css-reset';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}