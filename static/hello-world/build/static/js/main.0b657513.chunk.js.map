{"version":3,"sources":["services/contextLib.js","components/filter/elements/FilterDropdown.jsx","components/filter/FilterComponent.jsx","services/helper.js","components/table/elements/InitiativeComponent.jsx","components/table/elements/FixedVersionTitlecomponent.jsx","components/table/elements/FixedVersionCell.jsx","components/table/Table.jsx","App.js","index.js"],"names":["AppContext","createContext","useAppContext","useContext","FilterDropdown","arrayToFilter","setArrayToFilter","useState","dropdownOpen","setDropdownOpen","Dropdown","isOpen","toggle","prevState","DropdownToggle","tag","data-toggle","aria-expanded","className","DropdownMenu","map","data","i","FormGroup","check","Label","Input","type","defaultChecked","length","onChange","e","target","checked","newArr","console","log","FilterComponent","fixedVersions","setFixedVersions","initiatives","setInitiatives","parseByIssueType","issuesData","issueTypeFilter","temp_array","issue","issueType","push","Initiative","props","Col","xs","title","FixedVersionTitle","start","end","FixedVersionCell","epics","setEpics","epic","j","fixVersions","id","parents","parent","h","initKey","name","key","ReactTableComponent","Row","fixVer","isSelected","startDate","releaseDate","initiative","App","epicsProgress","setEpicsProgress","issues","setIssues","getEpicProgress","a","invoke","epicKey","then","useEffect","view","getContext","context","extension","project","projectKey","getAllInfo","Provider","value","version","Object","keys","JSON","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b657513.chunk.js","sourcesContent":["import { useContext, createContext } from \"react\";\r\n\r\nexport const AppContext = createContext(null);\r\n//create a global context for all pages\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    ButtonDropdown,\r\n    DropdownToggle,\r\n    Dropdown,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    FormText,\r\n} from \"reactstrap\";\r\n\r\nexport default function FilterDropdown(arrayToFilter, setArrayToFilter) {\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const toggle = () => setDropdownOpen(prevState => !prevState);\r\n    \r\n    return (\r\n        <div>\r\n            <Dropdown isOpen={dropdownOpen} toggle={toggle} >\r\n                <DropdownToggle\r\n                    tag=\"span\"\r\n                    data-toggle=\"dropdown\"\r\n                    aria-expanded={dropdownOpen}\r\n                >\r\n                    <div className=\"dropdwnbtn\"><b>Filter â–¶</b></div>\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                    {arrayToFilter.map((data, i) => (\r\n                        <div className=\"dropitem\"><FormGroup check>\r\n                            <Label check>\r\n                                {arrayToFilter[i][1] /**label names */ }\r\n                                <Input type=\"checkbox\" \r\n                                defaultChecked={data[data.length - 1] /**checkbox is ticked value*/ } \r\n                                onChange={(e) => {\r\n                                    //store current data\r\n                                    //if an event update\r\n                                    if(e.target.checked == true){     \r\n                                        let newArr = [...arrayToFilter];       \r\n                                        console.log(\"BOOLEAN set to: \" + e.target.checked);                \r\n                                        //store updated value in temp array\r\n                                        newArr[i][newArr[i].length - 1] = e.target.checked;\r\n                                        //update usestate\r\n                                        setArrayToFilter(newArr)              \r\n                                        console.log(arrayToFilter[i][newArr.length - 1]);                                                         \r\n                                    }\r\n                                    // check if box is not ticked\r\n                                    if(e.target.checked == false){\r\n                                        let newArr = [...arrayToFilter];\r\n                                        console.log(\"BOOLEAN set to: \" + e.target.checked);\r\n                                        //store updated value in temp array\r\n                                        newArr[i][newArr[i].length - 1] = e.target.checked;\r\n                                        //update usestate\r\n                                        setArrayToFilter(newArr)  \r\n                                        console.log(arrayToFilter[i][newArr.length - 1]);                                                         \r\n             \r\n                                    }                                                                            \r\n                                }} />{\" \"}\r\n                            </Label>{\" \"}\r\n                        </FormGroup></div>\r\n                    ))}\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n        </div>\r\n    )      \r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    ButtonDropdown,\r\n    DropdownToggle,\r\n    Dropdown,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    FormText,\r\n} from \"reactstrap\";\r\n\r\nimport { useAppContext } from \"../../services/contextLib\";\r\nimport FilterDropdown from \"./elements/FilterDropdown\";\r\n\r\n\r\nexport default function FilterComponent(){\r\n\r\n    const {fixedVersions, setFixedVersions} = useAppContext();\r\n    const {initiatives, setInitiatives} = useAppContext();\r\n\r\n    return(\r\n        <div>\r\n            {FilterDropdown(fixedVersions, setFixedVersions)}\r\n            {/* {FilterDropdown(initiatives, setInitiatives)} */}\r\n        </div>\r\n    )\r\n}","// export function parseIssues(issuesData){\r\n//     var temp_array = [];\r\n//     for(let i = 0; i < issuesData[0].length; i++){\r\n//         var element = issuesData[0][i];\r\n//         temp_array.push(element);\r\n//     }\r\n//     return temp_array;\r\n// }\r\n\r\nexport function parseByIssueType(issuesData, issueTypeFilter) {\r\n  var temp_array = [];\r\n  issuesData.map((issue, i) => {\r\n    if (issue.issueType == issueTypeFilter) {\r\n      temp_array.push(issue);\r\n    }\r\n  });\r\n  console.log(temp_array);\r\n  return temp_array;\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} contextKey project context key\r\n * @param {*} apiCall1 fetch issues api call\r\n * @param {*} apiCall2 fetch children api call\r\n * @returns returns combined 2 api calls values into a single array of arrays\r\n */\r\nexport async function fetchAllIssueInfo(epicKeys, issues) {\r\n  for (let i = 0; i < issues.length; i++) {\r\n    if (issues[i][2] == \"Epic\") {\r\n      let issuesKeys = await apiCall2(issues[i][0]);\r\n      issues[i].push(issuesKeys);\r\n    }\r\n  }\r\n  return [issues];\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTable } from \"react-table\";\r\n\r\nimport {\r\n    Col\r\n} from \"reactstrap\";\r\n\r\n\r\nexport default function Initiative(props) {\r\n    return (\r\n        <Col xs=\"auto\">\r\n            <div className=\"initiativeBox\">\r\n                <div className=\"intiative\">\r\n                    {props.title}\r\n                </div>\r\n            </div>\r\n\r\n        </Col>\r\n\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useTable } from \"react-table\";\r\n\r\nimport {\r\n    Col\r\n} from \"reactstrap\";\r\n\r\n\r\nexport default function FixedVersionTitle(props) {\r\n    return (\r\n        <Col xs=\"auto\">\r\n            <div className=\"fixSize\">\r\n                <p className=\"dateonfix\">\r\n                    {props.title} -- {props.start} -{\" \"}\r\n                    {props.end}\r\n                </p>\r\n            </div>\r\n\r\n        </Col>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useTable } from \"react-table\";\r\n\r\nimport {\r\n    Col\r\n} from \"reactstrap\";\r\nimport { useAppContext } from \"../../../services/contextLib\";\r\n\r\n\r\nexport default function FixedVersionCell(props) {\r\n    const { epics, setEpics } = useAppContext();\r\n\r\n    return (<div className=\"fixedVersion\">\r\n        <p className=\"fadedTitleCell\">{props.title}</p>\r\n        {epics.map((epic, j) => (\r\n            <div>\r\n                {(() => {\r\n                    if (epic.fixVersions == props.id) {\r\n                        return (\r\n\r\n                            <div>\r\n                                {epic.parents.map((parent, h) => (\r\n                                    <div>\r\n                                        {(() => {\r\n                                            if (parent == props.initKey) {\r\n                                                return (\r\n\r\n                                                    <div>\r\n                                                        <div className=\"epic\">\r\n\r\n                                                            <div className=\"epicName\">\r\n                                                                <p>\r\n                                                                    {epic.name}\r\n                                                                </p>\r\n                                                            </div>\r\n                                                            <p className=\"epicNum\">{epic.key}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                );\r\n                                            }\r\n                                        })()}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        );\r\n                    }\r\n                })()}\r\n            </div>\r\n        ))}\r\n\r\n    </div>)\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useTable } from \"react-table\";\r\n\r\nimport {\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  ButtonDropdown,\r\n  DropdownToggle,\r\n  Dropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n} from \"reactstrap\";\r\n\r\nimport { useAppContext } from \"../../services/contextLib\";\r\nimport Initiative from \"./elements/InitiativeComponent\";\r\nimport FixedVersionTitle from \"./elements/FixedVersionTitlecomponent\";\r\nimport FixedVersionCell from \"./elements/FixedVersionCell\";\r\n\r\n\r\n\r\n\r\n\r\nexport default function ReactTableComponent() {\r\n\r\n  const { fixedVersions, setFixedVersions } = useAppContext();\r\n  const { initiatives, setInitiatives } = useAppContext();\r\n  const { epics, setEpics } = useAppContext();\r\n\r\n\r\n\r\n  return (<div className=\"tablecont\">\r\n\r\n    {/* Fixed versions*/}\r\n    <Row>\r\n      <div className=\"ui-cont\">\r\n        <Col xs=\"auto\">\r\n          <div className=\"InitiativeSize\"></div>\r\n        </Col>\r\n        <div className=\"ui-cont\">\r\n          {fixedVersions.map((fixVer, i) => (\r\n\r\n            <div>{(() => {\r\n              if (fixVer.isSelected == true) {\r\n                return (\r\n                  <FixedVersionTitle title={fixVer.name} start={fixVer.startDate} end={fixVer.releaseDate} />\r\n                );\r\n              }\r\n            })()}\r\n            </div>\r\n\r\n\r\n          ))}\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </Row>\r\n\r\n    {initiatives.map((initiative, i) => (\r\n\r\n      <div>{(() => {\r\n        if (initiative.isSelected == true) {\r\n          return (\r\n            <Row className=\"initRow\">\r\n              <div className=\"ui-cont\">\r\n                <Initiative title={initiative.name} />\r\n                {fixedVersions.map((fixVer, j) => (\r\n                  <Col xs=\"auto\">\r\n                    {(() => {\r\n                      if (fixVer.isSelected == true) {\r\n                        return (\r\n                          <FixedVersionCell id={fixVer.id} title={fixVer.name} start={fixVer.startDate} end={fixVer.releaseDate} initKey={initiative.key} />\r\n                        );\r\n                      }\r\n                    })()}\r\n\r\n                  </Col>\r\n                ))}\r\n              </div>\r\n\r\n            </Row>\r\n          );\r\n        }\r\n      })()}\r\n      </div>\r\n    ))}\r\n  </div>)\r\n}","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Container,\n  Row,\n  Col,\n  ButtonDropdown,\n  DropdownToggle,\n  Dropdown,\n  DropdownMenu,\n  DropdownItem,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n} from \"reactstrap\";\n//\nimport { AppContext } from \"./services/contextLib\";\n//components\n//\nimport { view, invoke } from \"@forge/bridge\";\nimport \"./App.css\";\n// import FilterDropDown from \"./components/filter/FilterDropdown\"\nimport FilterComponent from \"./components/filter/FilterComponent\";\nimport { parseByIssueType } from \"./services/helper\";\n//import TableComponent from \"./components/table/TableComponent\";\n//import FixedVersionCol from \"./components/table/FixedVersionCol\";\nimport ReactTableComponent from \"./components/table/Table\";\nexport default function App() {\n  //usestates\n  const [fixedVersions, setFixedVersions] = useState([]);\n  const [initiatives, setInitiatives] = useState([]);\n  const [epics, setEpics] = useState([]);\n  const [epicsProgress, setEpicsProgress] = useState([]);\n  const [issues, setIssues] = useState([]);\n  const [modal, setModal] = useState(false);\n  const toggleM = () => setModal(!modal);\n\n  useEffect(() => {\n    async function getAllInfo() {\n      try {\n        const context = await view.getContext();\n        const key = context.extension.project.key;\n        await invoke(\"getFixedVersions\", { projectKey: key }).then((data) =>\n          setFixedVersions(data)\n        );\n        await invoke(\"getIssues\", { projectKey: key }).then((data) => {\n          setEpics(parseByIssueType(data, \"Epic\"));\n          setInitiatives(parseByIssueType(data, \"Initiative\"));\n          setIssues(data);\n          getEpicProgress();\n        });\n      } catch (e) {\n        console.log(\"API RENDER ERROR: \" + e);\n      }\n    }\n    getAllInfo();\n  }, []);\n\n  async function getEpicProgress() {\n    try {\n      await invoke(\"getProgressForEpics\", { epicKey: epics }).then((data) =>\n        setEpicsProgress(data)\n      );\n    } catch (e) {\n      console.log(\"API RENDER ERROR: \" + e);\n    }\n  }\n\n  if (fixedVersions.length > 0 && issues.length > 0) {\n    return (\n      <div>\n        <AppContext.Provider\n          value={{\n            fixedVersions,\n            setFixedVersions,\n            issues,\n            setIssues,\n            initiatives,\n            setInitiatives,\n            epics,\n            setEpics,\n          }}\n        >\n          <FilterComponent />\n\n          <ReactTableComponent />\n        </AppContext.Provider>\n\n        <div>\n          {fixedVersions.map((version, i) => (\n            <p>\n              {Object.keys(version).map((key, j) => (\n                <span>\n                  {key}: {version[key]}\n                </span>\n              ))}\n            </p>\n          ))}\n        </div>\n        <br></br>\n        <div>\n          {epics.map((epic, i) => (\n            <p>\n              {Object.keys(epic).map((key, j) => (\n                <span>\n                  {key}: {epic[key]}\n                </span>\n              ))}\n            </p>\n          ))}\n        </div>\n        <br></br>\n        {getEpicProgress().then((data) => JSON.stringify(data))}\n        {JSON.stringify(epicsProgress)}\n        <br></br>\n        <div>\n          {initiatives.map((initiative, i) => (\n            <p>\n              {Object.keys(initiative).map((key, j) => (\n                <span>\n                  {key}: {initiative[key]}\n                </span>\n              ))}\n            </p>\n          ))}\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"lds-ring\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@atlaskit/css-reset';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}